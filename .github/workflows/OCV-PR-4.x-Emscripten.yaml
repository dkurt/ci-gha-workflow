name: OCV PR:4.x OpenCV.js

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/OCV-PR-4.x-Emscripten.yaml'
  workflow_call:

concurrency:
  group: OCV-PR-4.x-Emscripten-${{ github.ref }}
  cancel-in-progress: true

env:
  PR_AUTHOR: ${{ github.event.pull_request.user.login }}
  PR_AUTHOR_FORK: ${{ github.event.pull_request.head.repo.full_name }}
  SOURCE_BRANCH_NAME: ${{ github.head_ref }}
  TARGET_BRANCH_NAME: ${{ github.base_ref }}
  OPENCV_WORKDIR: ${{ github.workspace }}/opencv
  EMSDK_VERSION: 2.0.10
  EMSDK_ROOT: ${{ github.workspace }}/emsdk

jobs:
  BuildAndTest:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
    - name: Define proper HOME path
      timeout-minutes: 60
      run: echo "HOME=/home/ci" >> $GITHUB_ENV

    - name: Setup infra environment
      timeout-minutes: 60
      if: ${{ github.event.repository.name == 'ci-gha-workflow' }}
      run: echo "TARGET_BRANCH_NAME=4.x" >> $GITHUB_ENV

    - name: PR info
      timeout-minutes: 60
      run: |
        echo "PR Author: ${{ env.PR_AUTHOR }}"
        echo "PR Author fork: ${{ env.PR_AUTHOR_FORK }}"
        echo "Source branch name: ${{ env.SOURCE_BRANCH_NAME }}"
        echo "Target branch name: ${{ env.TARGET_BRANCH_NAME }}"

    - name: Clone opencv
      timeout-minutes: 60
      run: |
        git clone --branch opencv_js_tests_update https://github.com/dkurt/opencv.git ${{ env.OPENCV_WORKDIR }}
        cd ${{ env.OPENCV_WORKDIR }}
        echo "LATEST_COMMIT_OPENCV=$(git log -n 1 ${{ env.TARGET_BRANCH_NAME }} --pretty=format:'%H')" >> $GITHUB_ENV

    - name: Setup EMSDK
      timeout-minutes: 60
      run: |
        git clone https://github.com/emscripten-core/emsdk.git ${{ env.EMSDK_ROOT }}
        cd ${{ env.EMSDK_ROOT }}
        git pull
        ./emsdk install ${{ env.EMSDK_VERSION }}
        ./emsdk activate ${{ env.EMSDK_VERSION }}

    - name: Build OpenCV.js
      timeout-minutes: 60
      run: |
        source ${{ env.EMSDK_ROOT }}/emsdk_env.sh
        emcmake python ${{ env.OPENCV_WORKDIR }}/platforms/js/build_js.py build_js --build_test
